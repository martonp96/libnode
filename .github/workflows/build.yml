name: Build libnode

on:
  push:
    tags:        
      - release
      - debug

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        arch: [x64]
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest

      - name: Build xmake project
        if: runner.os != 'Windows'
        shell: bash
        run: | 
            xmake config -y -m ${{  github.ref_name }} --verbose
            xmake -y --verbose

      - name: Build xmake project
        if: runner.os == 'Windows'
        shell: bash
        run: | 
            xmake config -y -p windows -m ${{  github.ref_name }} --toolchain=msvc --verbose
            xmake -y --verbose

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libnode-${{ runner.os }}-${{ matrix.arch }}
          path: ./artifacts

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions: 
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Zip node headers
        uses: TheDoctor0/zip-release@0.7.6
        with:
          type: zip
          filename: headers.zip
          directory: ${{ github.workspace }}
          path: libnode-Linux-x64/node

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ github.workspace }}/headers.zip
            ${{ github.workspace }}/libnode-Windows-x64/bin/libnode20.dll
            ${{ github.workspace }}/libnode-Windows-x64/bin/libnode20.lib
            ${{ github.workspace }}/libnode-Windows-x64/bin/libnode20.pdb
            ${{ github.workspace }}/libnode-Linux-x64/bin/libnode20.so

      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: libnode-*

